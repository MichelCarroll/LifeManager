<?php

/**
 * BaseTasks
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $task_id
 * @property string $name
 * @property timestamp $time_done
 * @property UserTasks $UserTasks
 * 
 * @method integer   getTaskId()    Returns the current record's "task_id" value
 * @method string    getName()      Returns the current record's "name" value
 * @method timestamp getTimeDone()  Returns the current record's "time_done" value
 * @method UserTasks getUserTasks() Returns the current record's "UserTasks" value
 * @method Tasks     setTaskId()    Sets the current record's "task_id" value
 * @method Tasks     setName()      Sets the current record's "name" value
 * @method Tasks     setTimeDone()  Sets the current record's "time_done" value
 * @method Tasks     setUserTasks() Sets the current record's "UserTasks" value
 * 
 * @package    LifeManager
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTasks extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tasks');
        $this->hasColumn('task_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('time_done', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             'format' => 'Y-m-d H:i:s',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserTasks', array(
             'local' => 'task_id',
             'foreign' => 'task_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}