<?php

/**
 * BaseTasks
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $task_id
 * @property string $name
 * @property boolean $is_important
 * @property boolean $is_urgent
 * @property timestamp $time_done
 * @property date $due_date
 * @property integer $task_order
 * 
 * @method integer   getTaskId()       Returns the current record's "task_id" value
 * @method string    getName()         Returns the current record's "name" value
 * @method boolean   getIsImportant()  Returns the current record's "is_important" value
 * @method boolean   getIsUrgent()     Returns the current record's "is_urgent" value
 * @method timestamp getTimeDone()     Returns the current record's "time_done" value
 * @method date      getDueDate()      Returns the current record's "due_date" value
 * @method integer   getTaskOrder()    Returns the current record's "task_order" value
 * @method Tasks     setTaskId()       Sets the current record's "task_id" value
 * @method Tasks     setName()         Sets the current record's "name" value
 * @method Tasks     setIsImportant()  Sets the current record's "is_important" value
 * @method Tasks     setIsUrgent()     Sets the current record's "is_urgent" value
 * @method Tasks     setTimeDone()     Sets the current record's "time_done" value
 * @method Tasks     setDueDate()      Sets the current record's "due_date" value
 * @method Tasks     setTaskOrder()    Sets the current record's "task_order" value
 * 
 * @package    LifeManager
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTasks extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tasks');
        $this->hasColumn('task_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_important', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('is_urgent', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('time_done', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             'format' => 'Y-m-d H:i:s',
             ));
        $this->hasColumn('due_date', 'date', null, array(
             'type' => 'date',
             'notnull' => false,
             'format' => 'd/m/Y',
             ));
        $this->hasColumn('task_order', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}