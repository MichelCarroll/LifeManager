<?php

/**
 * BaseUsers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $first_name
 * @property string $last_name
 * @property string $email
 * @property UserTasks $UserTasks
 * 
 * @method integer   getUserId()     Returns the current record's "user_id" value
 * @method string    getFirstName()  Returns the current record's "first_name" value
 * @method string    getLastName()   Returns the current record's "last_name" value
 * @method string    getEmail()      Returns the current record's "email" value
 * @method UserTasks getUserTasks()  Returns the current record's "UserTasks" value
 * @method Users     setUserId()     Sets the current record's "user_id" value
 * @method Users     setFirstName()  Sets the current record's "first_name" value
 * @method Users     setLastName()   Sets the current record's "last_name" value
 * @method Users     setEmail()      Sets the current record's "email" value
 * @method Users     setUserTasks()  Sets the current record's "UserTasks" value
 * 
 * @package    LifeManager
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserTasks', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));
    }
}